var h=Object.defineProperty,D=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var E=(t,e,s)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,r=(t,e)=>{for(var s in e||(e={}))l.call(e,s)&&E(t,s,e[s]);if(u)for(var s of u(e))O.call(e,s)&&E(t,s,e[s]);return t},n=(t,e)=>D(t,I(e));var p=(t,e)=>{var s={};for(var o in t)l.call(t,o)&&e.indexOf(o)<0&&(s[o]=t[o]);if(t!=null&&u)for(var o of u(t))e.indexOf(o)<0&&O.call(t,o)&&(s[o]=t[o]);return s};import{r as _,j as i}from"./index-BEnNszjz.js";import{ToastProvider as j,Toast as M,ToastTitle as y,ToastDescription as R,ToastClose as g,ToastViewport as v}from"./toast-DyPLgdd5.js";const V=1,w=1e6;let f=0;function N(){return f=(f+1)%Number.MAX_SAFE_INTEGER,f.toString()}const m=new Map,x=t=>{if(m.has(t))return;const e=setTimeout(()=>{m.delete(t),T({type:"REMOVE_TOAST",toastId:t})},w);m.set(t,e)},P=(t,e)=>{switch(e.type){case"ADD_TOAST":return n(r({},t),{toasts:[e.toast,...t.toasts].slice(0,V)});case"UPDATE_TOAST":return n(r({},t),{toasts:t.toasts.map(s=>s.id===e.toast.id?r(r({},s),e.toast):s)});case"DISMISS_TOAST":{const{toastId:s}=e;return s?x(s):t.toasts.forEach(o=>{x(o.id)}),n(r({},t),{toasts:t.toasts.map(o=>o.id===s||s===void 0?n(r({},o),{open:!1}):o)})}case"REMOVE_TOAST":return e.toastId===void 0?n(r({},t),{toasts:[]}):n(r({},t),{toasts:t.toasts.filter(s=>s.id!==e.toastId)})}},d=[];let S={toasts:[]};function T(t){S=P(S,t),d.forEach(e=>{e(S)})}function C(e){var t=p(e,[]);const s=N(),o=a=>T({type:"UPDATE_TOAST",toast:n(r({},a),{id:s})}),c=()=>T({type:"DISMISS_TOAST",toastId:s});return T({type:"ADD_TOAST",toast:n(r({},t),{id:s,open:!0,onOpenChange:a=>{a||c()}})}),{id:s,dismiss:c,update:o}}function L(){const[t,e]=_.useState(S);return _.useEffect(()=>(d.push(e),()=>{const s=d.indexOf(e);s>-1&&d.splice(s,1)}),[t]),n(r({},t),{toast:C,dismiss:s=>T({type:"DISMISS_TOAST",toastId:s})})}function Q(){const{toasts:t}=L();return i.jsxs(j,{children:[t.map(function(U){var A=U,{id:e,title:s,description:o,action:c}=A,a=p(A,["id","title","description","action"]);return i.jsxs(M,n(r({},a),{children:[i.jsxs("div",{className:"grid gap-1",children:[s&&i.jsx(y,{children:s}),o&&i.jsx(R,{children:o})]}),c,i.jsx(g,{})]}),e)}),i.jsx(v,{})]})}export{Q as Toaster};
